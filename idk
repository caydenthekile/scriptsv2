local scriptt = function(key)
     if key == "yesss" then
          while true and task.wait() do
               if game:IsLoaded() then
                    break
               end
          end
          getgenv().WoUStuff = {
               farm = false,
               mob = {},
               autosave = true,
               esp = true,
               espcolor = Color3.new(1,0,0)
          }
          local threads = {}
          local ply = game.Players.LocalPlayer
          local queue_on_teleport = queue_on_teleport or syn and syn.queue_on_teleport or fluxus and fluxus.queue_on_teleport
          local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
          local mainfolder = "W.o.U's Custom Folder"
          local uiconfigs = "W.o.U's Custom Folder//"..'UI Configs'
          local gamename = 'YbaServhop'
          local gamespecific = "W.o.U's Custom Folder//"..'UI Configs//'..game.Players.LocalPlayer.Name.."_"..gamename.."_".."autosave.json"
          function decode(stuff)
               return game:GetService('HttpService'):JSONDecode(stuff)
          end
          function encode(stuff)
               return game:GetService('HttpService'):JSONEncode(stuff)
          end
          local tbl = {
               __index = function(table,index)
                    if not rawget(WoUStuff,index) then
                         rawset(WoUStuff,index,nil)
                         writefile(gamespecific,encode(WoUStuff))
                    end
               end
          }
          setmetatable(WoUStuff,tbl)
          function g(folder)
               local amt = {}
               for i,v in next,folder do
                    table.insert(amt,v)
               end
               return amt
          end
          if not isfolder(mainfolder) then
               makefolder(mainfolder)
          end
          if not isfolder(uiconfigs) then
               makefolder(uiconfigs)
          end
          if not isfile(gamespecific) then
               writefile(gamespecific,encode(WoUStuff))
          end
          local decoded = decode(readfile(gamespecific))
          if #g(WoUStuff) > #g(decoded) then
               local grabbed = decoded
               for i,v in next,WoUStuff do
                    if not decoded[i] then
                         grabbed[i] = v
                         writefile(gamespecific,encode(grabbed))
                    end
               end
               for i,v in next,decoded do
                    WoUStuff[i] = v
               end
          else
               for i,v in next,decoded do
                    WoUStuff[i] = v
               end
          end
          for i,v in next,getconnections(ply.Idled) do
               v:Disable()
          end
          function isalivecheck()
               local exists,part = pcall(function()
                    return ply.Character.Humanoid
               end)
               if exists then
                    if part.Health>0 then
                         return true
                    else
                         return false
                    end
               else
                    return false
               end
          end
          function nc(val)
               local newvel = Instance.new('BodyVelocity')
               newvel.Name = 'idkkkk'
               newvel.Velocity = Vector3.new(0,0,0)
               if isalivecheck() then
                    if val then
                         if not ply.Character:WaitForChild('HumanoidRootPart'):FindFirstChild(newvel.Name) then
                              newvel.Parent = ply.Character:WaitForChild('HumanoidRootPart')
                         end
                    elseif not val or val == nil then
                         for i,v in next,ply.Character:WaitForChild('HumanoidRootPart'):GetChildren() do
                              if v.Name == newvel.Name then
                                   v:Destroy()
                              end
                         end
                    end
               end
          end
          function returndist(part)
               local dist
               if ply.Character ~= nil then
                    dist = (ply.Character:WaitForChild('HumanoidRootPart').Position-part.Position).Magnitude
               end
               return dist
          end
          function tp(place)
               if ply.Character then 
                    ply.Character:WaitForChild('HumanoidRootPart').Position = place.Position
               end
          end
          function generateNumbers(count)
               local numbers = {}
               local interval = 1 / (count - 1)  -- Adjusted to exclude zero
               for i = 0, count - 1 do
                   local number = interval * i
                    if number ~= 0 then
                         table.insert(numbers, number)
                    end
               end
               return numbers
          end
          function tpsafe(place,s,div)
               if isalivecheck() then
                    local speed = s or 0
                    local count = div or 10
                    local amt = generateNumbers(count)
                    local start = ply.Character:WaitForChild('HumanoidRootPart').Position
                    local endPos = place.Position
                    local totalDistance = (endPos - start).Magnitude
                    for i, v in ipairs(amt) do
                         local spot
                         if i == 1 then
                              spot = start
                         else
                              spot = start:Lerp(endPos, v)
                         end
                         nc(true)
                         ply.Character:WaitForChild('HumanoidRootPart').CFrame = CFrame.new(spot)
                         wait(speed)
                         local currentDistance = (spot - start).Magnitude
                         if currentDistance >= totalDistance then
                              break
                         end
                    end
               end
          end
          local esptable = {}
          function espadd(item)
               if item.ClassName == 'Model' then
                    local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - item:FindFirstChildWhichIsA('Part').Position).Magnitude
                    local spot = workspace.CurrentCamera:WorldToViewportPoint(item:FindFirstChildWhichIsA('Part').Position)
                    local esp = {item}
                    esp.name = Drawing.new('Text')
                    esp.distance = Drawing.new('Text')
                    esp.name.Text = tostring(item)
                    esp.name.Position = Vector2.new(spot.X-35,spot.Y)
                    esp.name.Visible = WoUStuff.esp
                    esp.name.Color = WoUStuff.espcolor
                    esp.distance.Text = math.round(dist)
                    esp.distance.Position = Vector2.new(spot.X-5,spot.Y+10)
                    esp.distance.Visible = WoUStuff.esp
                    esp.distance.Color = WoUStuff.espcolor
                    table.insert(esptable,esp)
               elseif item.ClassName == 'Part' then
                    local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - item.Position).Magnitude
                    local spot = workspace.CurrentCamera:WorldToViewportPoint(item.Position)
                    local esp = {item}
                    esp.name = Drawing.new('Text')
                    esp.distance = Drawing.new('Text')
                    esp.name.Text = tostring(item)
                    esp.name.Position = Vector2.new(spot.X-35,spot.Y)
                    esp.name.Visible = WoUStuff.esp
                    esp.name.Color = WoUStuff.espcolor
          
                    esp.distance.Text = math.round(dist)
                    esp.distance.Position = Vector2.new(spot.X-5,spot.Y+10)
                    esp.distance.Visible = WoUStuff.esp
                    esp.distance.Color = WoUStuff.espcolor
                    table.insert(esptable,esp)
               end
          end
          function updateesp()
               for i,v in next,esptable do
                    local spott = v[1]
                    if spott.ClassName == 'Model' then
                         local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - spott:FindFirstChildWhichIsA('Part').Position).Magnitude
                         local spot,vis = workspace.CurrentCamera:WorldToScreenPoint(spott:FindFirstChildWhichIsA('Part').Position)
                         if not vis then
                              setrenderproperty(v.name,'Visible',false)
                              setrenderproperty(v.distance,'Visible',false)
                         elseif vis then
                              setrenderproperty(v.name,'Position',Vector2.new(spot.X-35,spot.Y))
                              setrenderproperty(v.name,'Visible',WoUStuff.esp)
                              setrenderproperty(v.name,'Color',WoUStuff.espcolor)
                              setrenderproperty(v.distance,'Position',Vector2.new(spot.X-5,spot.Y+10))
                              setrenderproperty(v.distance,'Text',math.round(dist))
                              setrenderproperty(v.distance,'Visible',WoUStuff.esp)
                              setrenderproperty(v.distance,'Color',WoUStuff.espcolor)
                         end
                    elseif spott.ClassName == 'Part' then
                         local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - spott.Position).Magnitude
                         local spot,vis = workspace.CurrentCamera:WorldToScreenPoint(spott.Position)
                         if not vis then
                              setrenderproperty(v.name,'Visible',false)
                              setrenderproperty(v.distance,'Visible',false)
                         elseif vis then
                              setrenderproperty(v.name,'Position',Vector2.new(spot.X-35,spot.Y))
                              setrenderproperty(v.name,'Visible',WoUStuff.esp)
                              setrenderproperty(v.name,'Color',WoUStuff.espcolor)
                              setrenderproperty(v.distance,'Position',Vector2.new(spot.X-5,spot.Y+10))
                              setrenderproperty(v.distance,'Text',math.round(dist))
                              setrenderproperty(v.distance,'Visible',WoUStuff.esp)
                              setrenderproperty(v.distance,'Color',WoUStuff.espcolor)
                         end
                    end
               end
          end
          function servhop()
               local servs = {}
               local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", game.placeId)})
               local body = game:GetService'HttpService':JSONDecode(req.Body)
               for i,v in next,body.data do
                    if tonumber(v.playing)<tonumber(v.maxPlayers) and v.id ~= game.JobId then
                         table.insert(servs,v.id)
                    end
               end
               if #servs > 0 then
                    local worked,code = pcall(function()
                         game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servs[math.random(1,#servs)], game.Players.LocalPlayer)
                    end)
                    if not worked then
                         servhop()
                    end
               else
                    servhop()
               end
          end
          function rj()
               local worked,err = pcall(function()
                    game:GetService('TeleportService'):Teleport(game.PlaceId,ply)
               end)
               if not worked then
                    rj()
               end
          end
          
          function send(what,where)
               httprequest({
                    Url = where,
                    Method = "POST",
                    Headers = {
                         ["Content-Type"] = "application/json"
                    },
                    Body = game:GetService("HttpService"):JSONEncode({
                         ["content"] = what
                    })
               })
          end
          -- code here
          
          local items = {
               ["Mysterious Arrow"] = 25,
               ["Rokakaka"] = 25,
               ["Pure Rokakaka"] = 10,
               ["Lucky Arrow"] = 10,
               ["Lucky Stone Mask"] = 10,
               ["Rib Cage of The Saint's Corpse"] = 10,
               ["Steel Ball"] = 10,
               ["Zeppelin's Headband"] = 10,
               ["Ancient Scroll"] = 10,
               ["Quinton's Glove"] = 10,
               ["Stone Mask"] = 10,
               ["Gold Coin"] = 45,
               ["Diamond"] = 30,
               ["Dio's Diary"] = 10
          }
          function gp()
               if game:GetService('MarketplaceService'):UserOwnsGamePassAsync(ply.UserId,14597778) then
                    for i,v in next,items do
                         v = v * 2
                    end
               end
          end
          function check(item)
               local ts = {}
               local idk
               gp()
               if isalivecheck() then
                    for i,v in next,ply.Backpack:GetChildren() do
                         if v.Name == tostring(item) then
                              table.insert(ts,v)
                         end
                    end
                    for i,v in next,items do
                         if string.match(i,item) then
                              if #ts>=v then
                                   idk = false
                              elseif #ts<v then
                                   idk = true
                              end
                              break
                         end
                    end
               end
               return idk
          end
          function getcheckeditems()
               local stuff = {}
               for i,v in next,game:GetService("ReplicatedStorage").Tool_Replicas:GetChildren() do
                    table.insert(stuff,v.Name)
               end
               return stuff
          end
          function getitems()
               local b = {}
               for i,v in next,workspace.Item_Spawns.Items:GetChildren() do
                    if table.find(getcheckeditems(),v:FindFirstChildOfClass('ProximityPrompt').ObjectText) then
                         for i2,v2 in next,v:GetChildren() do
                              if string.match(v2.ClassName,'Part') then
                                   if v2.Transparency ~= 1 then
                                        table.insert(b,v)
                                   end
                              end
                         end
                    end
               end
               return b
          end
          function gettrues()
               local vals = {}
               for i,v in next,items do
                    table.insert(vals,i)
               end
               return vals
          end
          function getcloseitem()
               local item
               local far = math.huge
               for i,v in next,getitems() do
                    if isalivecheck() ~= nil then
                         if table.find(WoUStuff.mob,v:FindFirstChild('ProximityPrompt').ObjectText) then
                              if check(v:FindFirstChild('ProximityPrompt').ObjectText) then
                                   local distance = (ply.Character:WaitForChild('HumanoidRootPart').Position - v.WorldPivot.Position).Magnitude
                                   if distance < far then
                                        item = v
                                        far = distance
                                   end
                              end
                         end
                    end
               end
               return item
          end
          function clickprox(prox)
               for i,v in next,prox:GetChildren() do
                    if v.ClassName == 'ProximityPrompt' and v.Enabled then
                         fireproximityprompt(v)
                    end
               end
          end
          threads.rjthread = task.spawn(function()
               while true and task.wait() do
                    if not ply.Parent then
                         rj()
                    end
               end
          end)
          --ui
          local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/caydenthekile/scriptsv2/main/FavUiV3/source"))()
          local Window = Library:CreateWindow({
              Title = 'W.o.U',
              Center = true,
              AutoShow = true,
              Size = UDim2.fromOffset(500, 400)
          })
          local main = Window:AddTab('Main')
          local uisettings = Window:AddTab('Settings')
          local LeftGroupBox = main:AddLeftGroupbox('Left Main')
          local rightgroupbox = main:AddRightGroupbox('Right Main')
          LeftGroupBox:AddToggle('FarmToggle', {Text = 'Serverhop item farm',Default = WoUStuff.farm,
          Callback = function(value)
               WoUStuff.farm = value
          end})
          threads.farmthread = task.spawn(function()
               while true and task.wait() do
                    if WoUStuff.farm then
                         if not ply:FindFirstChild('LoadingScreen1') then
                              if not ply:FindFirstChild('LoadingScreen') then
                                   if #WoUStuff.mob > 0 then
                                        if getcloseitem() ~= nil then
                                             if isalivecheck() then
                                                  local item = getcloseitem()
                                                  if item then
                                                       local dist = (ply.Character:WaitForChild('HumanoidRootPart').Position - item.WorldPivot.Position).Magnitude
                                                       if dist > 5 then
                                                            tpsafe(item.WorldPivot,0,50)
                                                            task.wait(2)
                                                       else
                                                            clickprox(getcloseitem())
                                                            wait(2)
                                                       end
                                                  end
                                             end
                                        else
                                             servhop()
                                        end
                                   end
                              else
                                   game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Frames.Gamemodes.Visible = true
                                   local b = game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Frames.Gamemodes.MainGame.Play
                                   firesignal(b.MouseButton1Click)
                              end
                         end
                    end
               end
          end)
          LeftGroupBox:AddDropdown('MobDropdown',{Values = gettrues(),WoUStuff.mob,AllowNull = true,Multi = true, Text = 'Select Items',
          Callback = function(value)
               local vals = {}
               for i,v in next,value do
                    if v == true then
                         table.insert(vals,i)
                    end
               end
               WoUStuff.mob = vals
          end})
          Library:OnUnload(function()
               for i,v in next,threads do
                    task.cancel(v)
               end
              Library.Unloaded = true
          end)
          local MenuGroupLeft = uisettings:AddLeftGroupbox('Menu Settings')
          local MenuGroupRight = uisettings:AddRightGroupbox('Script Settings')
          MenuGroupRight:AddButton({Text = "Join My Discord",Tooltip = 'Copies and http join',
          Func = function()
               setclipboard("https://discord.gg/u3WAkxKzKb")
               httprequest({
                    Url = "http://127.0.0.1:6463/rpc?v=1",
                    Method = "POST",
                    Headers = {
                         ["Content-Type"] = "application/json",
                         ["origin"] = "https://discord.com",
                    },
                    Body = game:GetService("HttpService"):JSONEncode({
                         ["args"] = {
                              ["code"] = "u3WAkxKzKb",
                         },
                         ["cmd"] = "INVITE_BROWSER",
                         ["nonce"] = "."
                    })
               })
          end});
          MenuGroupRight:AddToggle('SaveToggle', {Text = 'Auto Save Settings',Default = WoUStuff.autosave,
          Callback = function(value)
               WoUStuff.autosave = value
          end})
          threads.savethread = task.spawn(function()
               while true and task.wait() do
                    if WoUStuff.autosave then
                         writefile(gamespecific,encode(WoUStuff))
                    end
               end
          end)
          MenuGroupLeft:AddButton('Unload',function()
               Library:Unload()
          end)
          MenuGroupLeft:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', {Default = 'LeftControl', NoUI = true, Text = 'Menu keybind' })
          Library.ToggleKeybind = Options.MenuKeybind
     end
end
return scriptt
